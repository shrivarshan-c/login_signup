{"ast":null,"code":"var _jsxFileName = \"/home/shri/Desktop/internship/location/login/login-registration/src/components/imageUpload..js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImageUpload() {\n  _s();\n\n  const [image, setImage] = useState(\"\");\n  const [allImage, setAllImage] = useState([]);\n\n  function covertToBase64(e) {\n    console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onload = () => {\n      console.log(reader.result); //base64encoded string  \n\n      setImage(reader.result);\n    };\n\n    reader.onerror = error => {\n      console.log(\"Error: \", error);\n    };\n  }\n\n  useEffect(() => {\n    getImage();\n  }, []);\n\n  function uploadImage() {\n    fetch(\"http://localhost:5000/upload-image\", {\n      method: \"POST\",\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        base64: image\n      })\n    }).then(res => res.json()).then(data => console.log(data));\n  }\n\n  function getImage() {\n    fetch(\"http://localhost:5000/get-image\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setAllImage(data.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      style: {\n        width: \"auto\"\n      },\n      children: [\"Let's Upload Image\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        type: \"file\",\n        onChange: covertToBase64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), image == \"\" || image == null ? \"\" : /*#__PURE__*/_jsxDEV(\"img\", {\n        width: 100,\n        height: 100,\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadImage,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }, this), allImage.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          width: 100,\n          height: 100,\n          src: data.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageUpload, \"H3gsnd/4I/X3wgrGXtlsKbqYgPE=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/shri/Desktop/internship/location/login/login-registration/src/components/imageUpload..js"],"names":["React","useEffect","useState","ImageUpload","image","setImage","allImage","setAllImage","covertToBase64","e","console","log","reader","FileReader","readAsDataURL","target","files","onload","result","onerror","error","getImage","uploadImage","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","base64","then","res","json","data","width","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction ImageUpload() {\n\n    const [image, setImage] = useState(\"\");\n    const [allImage, setAllImage] = useState([]);\n\n    function covertToBase64(e) {\n        console.log(e);\n        var reader = new FileReader();\n        reader.readAsDataURL(e.target.files[0]);\n        reader.onload = () => {\n            console.log(reader.result); //base64encoded string  \n            setImage(reader.result);\n        };\n        reader.onerror = error => {\n            console.log(\"Error: \", error);\n        };\n    }\n    useEffect(()=>{\n        getImage()\n    },[])\n\n    function uploadImage() {\n        fetch(\"http://localhost:5000/upload-image\", {\n            method: \"POST\",\n            crossDomain: true,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n            body: JSON.stringify({\n                base64: image\n            })\n        }).then((res) => res.json()).then((data) => console.log(data))\n    }\n    function getImage() {\n        fetch(\"http://localhost:5000/get-image\", {\n            method: \"GET\",\n        }).then((res) => res.json()).then((data) => {\n            console.log(data)\n            setAllImage(data.data)\n        })\n    }\n    return (\n        <div className=\"auth-wrapper\" >\n            <div className=\"auth-inner\" style={{ width: \"auto\" }}>\n                Let's Upload Image<br />\n                <input\n                    accept=\"image/*\"\n                    type=\"file\"\n                    onChange={covertToBase64}\n                />\n                {image == \"\" || image == null ? \"\" : <img width={100} height={100} src={image} />}\n                <button onClick={uploadImage}>Upload</button>\n<br/>\n                {allImage.map(data=>{\n                    return(\n                        <img width={100} height={100} src={data.image} />\n                        \n                    )\n                })}\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}